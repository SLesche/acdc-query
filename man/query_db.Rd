% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query_db.R
\name{query_db}
\alias{query_db}
\title{Query Database}
\usage{
query_db(
  conn,
  arguments,
  target_vars = "default",
  target_table = "observation_table",
  argument_relation = "and"
)
}
\arguments{
\item{conn}{The connection object to an SQLite database.}

\item{arguments}{A list of filtering arguments for the query. The list must have only one filter argument per list-entry.}

\item{target_vars}{A character vector specifying the variables to be included in the query results. "default" includes all variables in the target_table}

\item{target_table}{The target table in the database for querying.}

\item{argument_relation}{A character string specifying the relation between filtering arguments ("and" or "or" or a numerical vector with the same length as the number of arguments).}
}
\value{
A data frame containing the query results.
}

\description{
This function performs targeted queries on an SQLite database using specified filtering arguments and returns the query results.
It extracts information about which tables of the database are relevant for the query and then joins these tables to the target table.
The function constructs an SQL query which incorporates both joining and filtering target variables. This SQL statement is then applied to the database and the resulting dataframe is returned to the user.
}
\examples{
db_file <- base::system.file("extdata", "acdc.db", package = "acdcquery")
conn <- connect_to_db(db_file)

# Initializing argument list
arguments = list()

arguments = add_argument(
 list = arguments,
 conn = conn,
 variable = "task_name",
 operator = "equal",
 values = c("stroop", "flanker")
)
arguments = add_argument(
 list = arguments,
 conn = conn,
 variable = "dataset_id",
 operator = "equal",
 values = 1:10
)

# Return specified variables
target_vars = c("dataset_id", "task_name", "n_participants", "mean_dataset_rt")

# Return all variables in dataset_table and the target variables
query_results = query_db(
 conn = conn,
 arguments = arguments,
 target_vars = c("default", target_vars),
 target_table = "dataset_table",
 argument_relation = "and"
)

}
